import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib import colors
import io
from PIL import Image

# ------------------- –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è -------------------

# ------------------- –õ–æ–≥–æ—Ç–∏–ø —ñ –∑–∞–≥–æ–ª–æ–≤–æ–∫ -------------------
col1, col2, col3 = st.columns([1, 3, 1])
with col2:
    
    st.markdown("<h2 style='text-align: center;'>TB-Forecaster ‚Äî –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è —Ç—É–±–µ—Ä–∫—É–ª—å–æ–∑—É</h2>", unsafe_allow_html=True)

st.markdown("""
<p style='text-align: center; font-size:16px'>–ó–∞—Å—Ç–æ—Å—É–Ω–æ–∫ –º–æ–¥–µ–ª—é—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–ø–∞–¥–∫—ñ–≤ —Ç—É–±–µ—Ä–∫—É–ª—å–æ–∑—É —É –≤–∏–±—Ä–∞–Ω—ñ–π —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –¥–µ–º–æ–≥—Ä–∞—Ñ—ñ—ó, —Ä–∏–∑–∏–∫—ñ–≤, –¥–∞–Ω–∏—Ö –º–∏–Ω—É–ª–∏—Ö —Ä–æ–∫—ñ–≤ —Ç–∞ —ñ–Ω—Ç–µ—Ä–≤–µ–Ω—Ü—ñ–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ –ü—É–∞—Å—Å–æ–Ω–∞.</p>
""", unsafe_allow_html=True)

# ------------------- –¢–µ—Ä–∏—Ç–æ—Ä—ñ—è -------------------
districts = ["–ë–µ—Ä–¥—è–Ω—Å—å–∫–∏–π", "–í–∞—Å–∏–ª—ñ–≤—Å—å–∫–∏–π", "–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∏–π", "–ú–µ–ª—ñ—Ç–æ–ø–æ–ª—å—Å—å–∫–∏–π", "–ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π", "–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å"]
territory = st.selectbox("–¢–µ—Ä–∏—Ç–æ—Ä—ñ—è (—Ä–∞–π–æ–Ω / –æ–±–ª–∞—Å—Ç—å)", districts)

# ------------------- –ü–µ—Ä—ñ–æ–¥ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è -------------------
model_period = st.radio("–Ø–∫–∏–π –ø–µ—Ä—ñ–æ–¥ –ø—Ä–æ–≥–Ω–æ–∑—É—î—Ç—å—Å—è?", ["–í–æ—î–Ω–Ω–∏–π", "–ü—ñ—Å–ª—è–≤–æ—î–Ω–Ω–∏–π"])

# ------------------- –ó–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—ñ—Å—Ç—å -------------------
st.subheader("–ü–æ–∫–∞–∑–Ω–∏–∫–∏ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–æ—Å—Ç—ñ (–º–æ–∂–Ω–∞ –¥–æ–¥–∞–≤–∞—Ç–∏/–≤–∏–¥–∞–ª—è—Ç–∏ —Ä—è–¥–∫–∏)")

if 'incidence_data' not in st.session_state:
    st.session_state.incidence_data = [{'year': '', 'value': '', 'period': '–î–æ–≤–æ—î–Ω–Ω–∏–π'}]

def add_row():
    st.session_state.incidence_data.append({'year': '', 'value': '', 'period': '–î–æ–≤–æ—î–Ω–Ω–∏–π'})

def remove_row(i):
    st.session_state.incidence_data.pop(i)

period_options = ["–î–æ–≤–æ—î–Ω–Ω–∏–π", "–í–æ—î–Ω–Ω–∏–π", "–ü—ñ—Å–ª—è–≤–æ—î–Ω–Ω–∏–π"]

for i, row in enumerate(st.session_state.incidence_data):
    cols = st.columns([2, 3, 3, 1])
    row['year'] = cols[0].text_input(f"–†—ñ–∫ {i+1}", value=row['year'], key=f"year_{i}")
    row['value'] = cols[1].text_input(f"–ó–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—ñ—Å—Ç—å –Ω–∞ 100 —Ç–∏—Å. {i+1}", value=row['value'], key=f"value_{i}", help="–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –¥–µ—Å—è—Ç–∫–æ–≤—ñ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∫—Ä–∞–ø–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 56.4)")
    row['period'] = cols[2].selectbox(f"–ü–µ—Ä—ñ–æ–¥ {i+1}", options=period_options, index=period_options.index(row['period']), key=f"period_{i}")
    if cols[3].button("üóëÔ∏è", key=f"remove_{i}"):
        remove_row(i)
        st.rerun()

st.button("‚ûï –î–æ–¥–∞—Ç–∏ —Ä—è–¥–æ–∫", on_click=add_row)

# ------------------- –ë–∞–∫—Ç–µ—Ä—ñ–æ—Å–∫–æ–ø—ñ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å —Ç–∞ —Ä–µ—Ü–∏–¥–∏–≤–∏ -------------------
st.subheader("–ë–∞–∫—Ç–µ—Ä—ñ–æ—Å–∫–æ–ø—ñ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å —Ç–∞ —Ä–µ—Ü–∏–¥–∏–≤–∏")
mbt_status = st.radio("–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—É—Å:", ["–ú–ë–¢+", "–ú–ë–¢‚àí", "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"])
relapses_included = st.radio("–ß–∏ –≤—Ä–∞—Ö–æ–≤–∞–Ω—ñ –≤–∏–ø–∞–¥–∫–∏ —Ä–µ—Ü–∏–¥–∏–≤—ñ–≤?", ["–¢–∞–∫", "–ù—ñ"])

# ------------------- –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞—Å–µ–ª–µ–Ω–Ω—è -------------------
st.subheader("–û–±–µ—Ä—ñ—Ç—å –ø–µ—Ä–µ–≤–∞–∂–∞—é—á—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –Ω–∞—Å–µ–ª–µ–Ω–Ω—è")
age_group = st.selectbox("", [
    "–î—ñ—Ç–∏ –¥–æ 1 —Ä–æ–∫—É", "–î—ñ—Ç–∏ 1‚Äì4 —Ä–æ–∫–∏", "–î—ñ—Ç–∏ 5‚Äì9 —Ä–æ–∫—ñ–≤", "–î—ñ—Ç–∏ 10‚Äì14 —Ä–æ–∫—ñ–≤", "–î—ñ—Ç–∏ 15‚Äì17 —Ä–æ–∫—ñ–≤",
    "–î–æ—Ä–æ—Å–ª—ñ: 18 —Ä–æ–∫—ñ–≤ —ñ —Å—Ç–∞—Ä—à–µ"
])

# ------------------- –ì—Ä—É–ø–∏ —Ä–∏–∑–∏–∫—É -------------------
st.subheader("–ü–µ—Ä–µ–≤–∞–∂–∞—é—á—ñ –≥—Ä—É–ø–∏ —Ä–∏–∑–∏–∫—É")
risk_groups = st.multiselect("–û–±–µ—Ä—ñ—Ç—å –≥—Ä—É–ø–∏:", [
    "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –æ—Å–æ–±–∏", "–õ—é–¥–∏, —â–æ –∂–∏–≤—É—Ç—å –∑ –í–Ü–õ", "–û—Å–æ–±–∏ –∑ —Ö—Ä–æ–Ω—ñ—á–Ω–∏–º–∏ —Ö–≤–æ—Ä–æ–±–∞–º–∏",
    "–®–∞—Ö—Ç–∞—Ä—ñ", "–ú–µ–¥–ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∏", "–í—ñ–π—Å—å–∫–æ–≤—ñ", "–í–ü–û", "–£–≤'—è–∑–Ω–µ–Ω—ñ —Ç–∞ –∑–≤—ñ–ª—å–Ω–µ–Ω—ñ",
    "–ö—É—Ä—Ü—ñ", "–û—Å–æ–±–∏ –∑ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ—é –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—é", "–õ—ñ—Ç–Ω—ñ –ª—é–¥–∏ (65+)",
    "–õ—é–¥–∏ –∑ —ñ–Ω–≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—é", "–û—Å–æ–±–∏ –∑ –Ω–∏–∑—å–∫–∏–º —Å–æ—Ü—ñ–∞–ª—å–Ω–æ-–µ–∫–æ–Ω–æ–º—ñ—á–Ω–∏–º —Å—Ç–∞—Ç—É—Å–æ–º",
    "–õ—é–¥–∏, —è–∫—ñ –Ω–µ –º–∞—é—Ç—å –ø–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –º—ñ—Å—Ü—è –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è", "–ú—ñ–≥—Ä–∞–Ω—Ç–∏",
    "–û—Å–æ–±–∏ –∑ —Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–∏–º –¢–ë –≤ –∞–Ω–∞–º–Ω–µ–∑—ñ", "–ù–µ–º–æ–≤–ª—è—Ç–∞ —ñ –¥—ñ—Ç–∏ –¥–æ 5 —Ä–æ–∫—ñ–≤",
    "–í–∞–≥—ñ—Ç–Ω—ñ –∂—ñ–Ω–∫–∏", "–ü—ñ–¥–ª—ñ—Ç–∫–∏", "–ü–∞—Ü—ñ—î–Ω—Ç–∏ –∑ —Ü—É–∫—Ä–æ–≤–∏–º –¥—ñ–∞–±–µ—Ç–æ–º",
    "–û—Å–æ–±–∏ –ø—ñ—Å–ª—è —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ü—ñ–π", "–ü–∞—Ü—ñ—î–Ω—Ç–∏ –Ω–∞ —ñ–º—É–Ω–æ—Å—É–ø—Ä–µ—Å–∏–≤–Ω—ñ–π —Ç–µ—Ä–∞–ø—ñ—ó", "–Ü–Ω—à—ñ"
])

# ------------------- –¢–∏–ø –¢–ë -------------------
st.subheader("–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç—É–±–µ—Ä–∫—É–ª—å–æ–∑—É")
tb_type = st.radio("", ["–õ–µ–≥–µ–Ω–µ–≤–∏–π", "–ü–æ–∑–∞–ª–µ–≥–µ–Ω–µ–≤–∏–π"])

# ------------------- –î–µ–º–æ–≥—Ä–∞—Ñ—ñ—è -------------------
st.subheader("–î–µ–º–æ–≥—Ä–∞—Ñ—ñ—è")
population = st.number_input("–ù–∞—Å–µ–ª–µ–Ω–Ω—è —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó (–æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä—ñ–∫)", min_value=0, value=100000)
returnees = st.number_input("–û—á—ñ–∫—É–≤–∞–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞—Å–µ–ª–µ–Ω–Ω—è (–æ—Å—ñ–±)", min_value=0, value=0)

# ------------------- –†–æ–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑—É -------------------
years_to_model = st.text_input("–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∫—ñ–≤ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É (—á–µ—Ä–µ–∑ –∫–æ–º—É)", "2025,2026,2027,2028,2029")

# ------------------- –Ü–Ω—Ç–µ—Ä–≤–µ–Ω—Ü—ñ—ó -------------------
st.subheader("–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ –¥—ñ—ó/–≤—Ç—Ä—É—á–∞–Ω–Ω—è –¥–ª—è –≤–ø–ª–∏–≤—É –Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—é (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ)")
intervention = st.radio("–ß–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—å—Å—è –∞–±–æ –ø–ª–∞–Ω—É—é—Ç—å—Å—è —ñ–Ω—Ç–µ—Ä–≤–µ–Ω—Ü—ñ—ó?", ["–¢–∞–∫", "–ù—ñ"], index=1)
intervention_text = st.text_area(
    "–ü–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ –¥—ñ—ó/–≤—Ç—Ä—É—á–∞–Ω–Ω—è",
    help="–£—Ç–æ—á–Ω—ñ—Ç—å –∑–∞—Ö–æ–¥–∏: –∞–∫—Ç–∏–≤–Ω–µ –≤–∏—è–≤–ª–µ–Ω–Ω—è, –≤–∞–∫—Ü–∏–Ω–∞—Ü—ñ—è, —Ç–æ—â–æ.",
    placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: —Ñ–ª—é–æ—Ä–æ–≥—Ä–∞—Ñ—ñ—è —Å–µ—Ä–µ–¥ –í–ü–û..."
)

# ------------------- –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ -------------------
if st.button("–ó–º–æ–¥–µ–ª—é–≤–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑"):
    try:
        years = [int(row['year']) for row in st.session_state.incidence_data if row['year'] and row['value']]
        values = [float(row['value']) for row in st.session_state.incidence_data if row['year'] and row['value']]
        future_years = [int(y.strip()) for y in years_to_model.split(",")]

        X = np.log(np.array(years).reshape(-1, 1))
        y = np.log(np.array(values))
        a, b = np.polyfit(X.flatten(), y, deg=1)
        predictions = [np.exp(a * np.log(x) + b) for x in future_years]

        result_df = pd.DataFrame({
            "–†—ñ–∫": future_years,
            "–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—ñ—Å—Ç—å –Ω–∞ 100 —Ç–∏—Å.": np.round(predictions, 2),
            "–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–ø–∞–¥–∫—ñ–≤": np.round(np.array(predictions) * (population + returnees) / 100000).astype(int)
        })

        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑—É")
        st.dataframe(result_df)

        # --- –ì—Ä–∞—Ñ—ñ–∫ ---
        fig, ax = plt.subplots()
        ax.plot(years, values, label="–§–∞–∫—Ç", marker="o")
        ax.plot(future_years, predictions, label="–ü—Ä–æ–≥–Ω–æ–∑", linestyle="--", marker="x")
        ax.set_xlabel("–†—ñ–∫")
        ax.set_ylabel("–ó–∞—Ö–≤–æ—Ä—é–≤–∞–Ω—ñ—Å—Ç—å –Ω–∞ 100 —Ç–∏—Å.")
        ax.set_title("–ü—Ä–æ–≥–Ω–æ–∑ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–æ—Å—Ç—ñ –Ω–∞ —Ç—É–±–µ—Ä–∫—É–ª—å–æ–∑")
        ax.legend()
        st.pyplot(fig)

        # --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ PDF ---
        buffer = io.BytesIO()
        doc = SimpleDocTemplate(buffer)
        styles = getSampleStyleSheet()
        elems = [Paragraph("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑—É TB-Forecaster", styles["Title"]), Spacer(1, 12)]

        data = [list(result_df.columns)] + result_df.values.tolist()
        table = Table(data)
        table.setStyle(TableStyle([
            ("BACKGROUND", (0, 0), (-1, 0), colors.grey),
            ("TEXTCOLOR", (0, 0), (-1, 0), colors.whitesmoke),
            ("ALIGN", (0, 0), (-1, -1), "CENTER"),
            ("GRID", (0, 0), (-1, -1), 1, colors.black),
        ]))
        elems.append(table)
        doc.build(elems)
        st.download_button("üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF", data=buffer.getvalue(), file_name="TB_forecast.pdf")

    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É: {e}")